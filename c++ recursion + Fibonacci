#https://www.facebook.com/permalink.php?story_fbid=180106856999528&id=100050006454252
#subscribe by heena rana


include<iostream>

// using namespace std;

// int fibonacci(int n){
//       if(n<2){
//             return 1;
//       }
//       return fibonacci(n-2) + fibonacci(n-1);
// }

// //in these we are calling one function again and again
// // fibbo(4) + fib(3);
// // fibbo(2) + fib(3)  + fib(2)+ fib(3)

// //recursion 

// int factor(int n){

// if(n<=2) {
//       return 1 ;
// }
//       return n* factor(n-1);
// }
// // fatorial(4)= 4*factorial(3);
// // fatorial(4)= 4*3factorial(2);
// // fatorial(4)= 4*3*2 factorial(1);
// // fatorial(4)= 4*3*2*1 ;
// // factorial(4)=24;
// // step by step calculation by 4
// int main(){
//         //factorial of a number;
//        // 6! =6*5*4*3*2*1=720
//        //n!= n*(n-1)!
//        int a=4;
//        cout<<"enter a number"<<endl;
//        cin>>a;
//       //  cout<<"the factorian "<<a<<" is"  <<factor(a)<<endl;
//         cout<<"the term in fibonacci series at position  "<<a<<" is"  <<fibonacci(a)<<endl;
//        return 0;
// }

// tut19  // function  overloading  *******************************************************

// means use of one thing in multiple work*8*****
#include<iostream>

using namespace std;


int add(int a, int b){
      cout<<"using func with two argument "<<endl;
    return a+b;  
}
int add (int a, int b, int c){
      cout<<"using func with 3 argument "<<endl;
    

       return a+b+c;
}
// volume of cylinder 

 int volume (double r ,int h){

       return(3.14 *r*h);
 } 

 // volume of cube 
 int volume (int a ){

       return(a*a*a);
 }
// volume of rectangle

int volume (int l,int b,int h){

      return(l*b*h);
}
int main(){


     cout<<"the sum of  3 and 6 is"<<add(3,6)<<endl;
     cout<<"the sum of  3 , 6  and 7 is"<<add(3,6,7)<<endl;
     cout<<"the volume of cuboid = "<<volume(3,6,7)<<endl;
     cout<<"the volume of cylinder radius 3 and height 6 is = "<<volume(3,6)<<endl;
     cout<<"the volume of cube radius 3 = "<<volume(3)<<endl;
      
      return 0;
}



